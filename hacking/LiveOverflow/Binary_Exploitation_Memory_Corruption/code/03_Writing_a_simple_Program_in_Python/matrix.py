#!/usr/bin/python3

# Purpose: print "Knock, knock, NAME", where `NAME` is a runtime supplied argument
# Test: `$ ./matrix.py $USER`
# Input: an arbitrary name string
# Output: "Knock, knock, <your login name>"
# Reference: https://www.youtube.com/watch?v=ajy1PHWYeyQ

# To access the arguments passed to this  script on the command-line, we need to
# import the module `sys`.
import sys

if len(sys.argv) == 2:
    # This is a specifier which will  be replaced with the first argument passed
    # to the `.format()` method.  More generally, `{123}` would be replaced with
    # the 124th argument passed to `.format()`.
    #                    vvv
    print("Knock, knock, {0}.".format(sys.argv[1]))
    #                                 ^---------^
    # This  evaluates  to  the  first  argument passed  to  the  script  on  the
    # command-line:
    #
    #     $ ./matrix.py $USER
    #                   ^---^
else:
    # Notice  that `.write()`  doesn't do  anything implicitly.   If you  want a
    # newline at the end, you must write it explicitly.
    # OTOH, `print()`  assumes that you  always want a newline  at the end  of a
    # message, and appends one implicitly.
    #
    #                                  vv
    sys.stderr.write("Usage: {0} <name>\n".format(sys.argv[0]))
    #                                             ^---------^
    # This evaluates  to whatever you  wrote on  the command-line to  invoke the
    # script:
    #
    #     $ ./matrix.py $USER
    #       ^---------^
    #       assumes that you're in the same directory as the script
    #
    #     $ matrix.py $USER
    #       ^-------^
    #       assumes that you're in a directory which is present in your PATH
    #
    #     $ /path/to/matrix.py $USER
    #       ^----------------^
